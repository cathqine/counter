{"ast":null,"code":"var _jsxFileName = \"/Users/catherineliu/Desktop/counter/src/components/counter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // function to update\n  const increment = () => {\n    setCount(count => {\n      localStorage.setItem(\"count\", count);\n      return count;\n    });\n  };\n\n  // useEffect to render once\n  useEffect(() => {\n    const storedCount = localStorage.getItem('count');\n    if (storedCount) {\n      // exists\n      setCount(storedCount);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter: \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Counter, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","_s","count","setCount","increment","localStorage","setItem","storedCount","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/catherineliu/Desktop/counter/src/components/counter.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  // function to update\n  const increment = () => {\n    setCount((count) => {\n      localStorage.setItem(\"count\", count);\n      return count;\n    })\n  };\n\n  // useEffect to render once\n  useEffect(() => {\n    const storedCount = localStorage.getItem('count');\n    if (storedCount) {// exists\n      setCount(storedCount);\n    }\n  }, []);\n\n  return (\n    <>\n      <h1>Counter: {count} </h1>\n      <button onClick={increment}> + </button>\n    </>\n  );\n}\n\nexport default Counter;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAAED,KAAK,IAAK;MAClBG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;MACpC,OAAOA,KAAK;IACd,CAAC,CAAC;EACJ,CAAC;;EAED;EACAP,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAGF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;IACjD,IAAID,WAAW,EAAE;MAAC;MAChBJ,QAAQ,CAACI,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA;MAAAY,QAAA,GAAI,WAAS,EAACP,KAAK,EAAC,GAAC;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhB,OAAA;MAAQiB,OAAO,EAAEV,SAAU;MAAAK,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACxC,CAAC;AAEP,CAAC;AAAAZ,EAAA,CAzBKD,OAAO;AAAAe,EAAA,GAAPf,OAAO;AA2Bb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}